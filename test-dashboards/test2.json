{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": {
                    "type": "grafana",
                    "uid": "-- Grafana --"
                },
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 26,
    "links": [],
    "liveNow": false,
    "panels": [
        {
            "datasource": {
                "type": "marcusolsson-json-datasource",
                "uid": "2Iv2frYVz"
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 0
            },
            "id": 4,
            "options": {
                "baidu": {
                    "callback": "bmapReady",
                    "key": ""
                },
                "editor": {
                    "format": "auto",
                    "height": 600
                },
                "gaode": {
                    "key": "",
                    "plugin": "AMap.Scale,AMap.ToolBar"
                },
                "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer;\n\n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
                "google": {
                    "callback": "gmapReady",
                    "key": ""
                },
                "map": "none",
                "renderer": "canvas"
            },
            "pluginVersion": "9.4.7",
            "targets": [
                {
                    "cacheDurationSeconds": 300,
                    "datasource": {
                        "type": "marcusolsson-json-datasource",
                        "uid": "2Iv2frYVz"
                    },
                    "fields": [
                        {
                            "jsonPath": "$.Results.series[0].data[*].year",
                            "language": "jsonpath",
                            "name": ""
                        },
                        {
                            "jsonPath": "$.Results.series[0].data[*].periodName",
                            "language": "jsonpath",
                            "name": ""
                        },
                        {
                            "jsonPath": "$.Results.series[0].data[*].value",
                            "language": "jsonpath",
                            "name": ""
                        }
                    ],
                    "method": "GET",
                    "queryParams": "",
                    "refId": "A",
                    "urlPath": "/LNS14000000"
                }
            ],
            "title": "Unemployment",
            "type": "volkovlabs-echarts-panel"
        }
    ],
    "refresh": "",
    "revision": 1,
    "schemaVersion": 38,
    "style": "dark",
    "tags": [],
    "templating": {
        "list": []
    },
    "time": {
        "from": "now-6h",
        "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Testing JSON API",
    "uid": "yzjJBrYVz",
    "version": 7,
    "weekStart": ""
}